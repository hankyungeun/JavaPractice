/*
	 * 배열 (1차원 배열) : "같은 자료형"의 "여러 개의 데이터"를 저장하는 공간
	 * 
	 * - 선언 방법
	 * 
	 * 		자료형[] 참조변수명; // 선호하는 방식! 자료형 참조변수명[];
	 * 
	 * - 할당(생성) 방법
	 * 
	 * 		참조변수명 = new 자료형[배열 길이];
	 * 
	 * - 값을 대입/참조
	 * 
	 * 		* 대입 : 참조변수명[인덱스] = 값; // 인덱스: 위치를 의미. **0부터 시작!** 
	 * 		* 참조 : 참조변수명[인덱스]
	 * 
	 * - 배열 초기화(값을 최초로 대입)
	 * 
	 * 		* 자료형[] 참조변수명 = new 참조변수명[배열길이]; 참조변수명[0] = 값1; 참조변수명[1] = 값2;
	 * 
	 * 		* 자료형[] 참조변수명 = new 참조변수명[]{값1, 값2, 값3};
	 * 
	 * 		* 자료형[] 참조변수명 = {값1, 값2, 값3};
	 * 
	 * - 배열 복사
	 * 
	 * 		* 얕은 복사: 배열의 주소 값만 복사하여 실제 데이터가 한 곳에서 관리
	 * 
	 * 			[복사할 배열명] = [원본 배열명]; 
	 *		ex) int[] org = new int[3]; // 정수형 배열의 초기값은 0. 
	 * 			int[] copy = org; // 얕은 복사 
	 *			copy[0] = 10; 
	 * 			System.out.println(org[0]); // 결과 : 10
	 * 
	 * 		* 깊은 복사: 새로운 배열 객체를 생성해서 기존 배열의 데이터를 복사
	 * 
	 * 			* 배열A : 원본 배열, 배열B : 복사할 배열 
	 * 			- 반복문 사용 
	 *				for(int i=0; i<배열길이; i++) { 
	 * 					// i: 0, 1,2, ..., 배열길이-1 
	 * 					배열B[i] = 배열A[i]; // 배열A의 i번째 위치의 데이터를 
	 *									   // 배열B의 i번째 위치에 대입(복사) 
	 *				}
	 * 
	 *			- clone() 사용 배열B = 배열A.clone();
	 * 
	 * 			- Arrays.copyOf() 사용 
	 * 				배열B = Arrays.copyOf(배열A, 복사할 데이터 길이); // 배열A.length : 보통 배열A 길이만큼 복사
	 * 
     *			- System.arraycopy() 사용 
     *				System.arraycopy(배열A, 배열A 복사할 시작 위치(0), 배열B, 배열B 복사할 시작 위치(0), 복사할 데이터 길이);
	 * 
	 * 	- 반복문 foreach문 
	 * 		* 일반적인 for문 : for(초기식; 조건식; 증감식) {} 
	 * 		* foreach문 for(자료형 변수명:배열명) { 
	 * 			// 변수명 : 배열의 첫번째 위치의 데이터부터 마지막 위치의 데이터를 사용할 수 있음 
	 * 		  }
	 * 
	 * 		  ex) int[] arr = {10, 20, 30}; 
	 * 			  for(int item : arr) { 
	 * 				System.out.print(item + " "); 
	 * 			  } // 결과: 10 20 30
	 */